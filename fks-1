#!/usr/bin/env python3

import os
from Bio import SeqIO

# Function to read the wild-type sequence from a FASTA file
def read_wild_type_sequence(directory):
    for filename in os.listdir(directory):
        if filename.endswith(".fasta") and not filename.startswith("OQ"):
            wild_type_file_path = os.path.join(directory, filename)
            for record in SeqIO.parse(wild_type_file_path, "fasta"):
                return str(record.seq)
def find_mutations(wild_type_sequence, sequence):
    mutations = []
    for i, (base_wt, base_seq) in enumerate(zip(wild_type_sequence, sequence)):
        if base_wt != base_seq:
            mutations.append((i + 1, base_wt, base_seq))  # Position is 1-indexed
    return mutations


# Function to process all FASTA files in a directory
def process_fasta_directory(directory, wild_type_sequence):
    for filename in os.listdir(directory):
        if filename.endswith(".fasta") and not filename.startswith("wild_type_"):
            file_path = os.path.join(directory, filename)
            print(f"Processing file: {file_path}")
            for record in SeqIO.parse(file_path, "fasta"):
                sequence = str(record.seq)
                mutations = find_mutations(wild_type_sequence, sequence)
                if mutations:
                    print(f"Found {len(mutations)} mutations in sequence {record.id}:")
                    for location, base_wt, base_seq in mutations:
                        print(f"- Position {location}: {base_wt} -> {base_seq}")

# Main function
if __name__ == "__main__":
    # Specify the directory containing the FASTA files
    fasta_directory = "/Users/mahmoudel-mahmoud/fks1-mutation"

    # Read the wild-type sequence from the designated file
    wild_type_sequence = read_wild_type_sequence(fasta_directory)

    # Process all FASTA files in the directory
    process_fasta_directory(fasta_directory, wild_type_sequence)

